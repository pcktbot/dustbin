class Backend{constructor(a){if(!a)throw Error('Must provide plugin name');a.startsWith('webdash-')&&(a=a.replace(/^webdash\-/,'')),this._baseUrl=`/api/${a}/`,this._defaultHeaders={"Content-Type":'application/json'},this._defaultBody={}}getBaseUrl(){return this._baseUrl}getDefaultHeaders(){return this._defaultHeaders}getDefaultBody(){return this._defaultBody}handleLeadingSlash(a){return a.startsWith('/')&&(a=a.substr(1)),a}async get(a=''){a=this.handleLeadingSlash(a);const b=await fetch(this.getBaseUrl()+a),c=await b.json();return c}async post(a='',b=void 0,c={}){return await this._send('POST',a,b,c)}async put(a='',b=void 0,c={}){return await this._send('PUT',a,b,c)}async delete(a='',b=void 0,c={}){return await this._send('DELETE',a,b,c)}async _send(a,b='',c=void 0,d={}){b=this.handleLeadingSlash(b);const e=await fetch(this.getBaseUrl()+b,{method:a,headers:Object.assign(this.getDefaultHeaders(),d),body:JSON.stringify(Object.assign(this.getDefaultBody(),c))});return await e.json()}}window.Backend=Backend;