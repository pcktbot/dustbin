$width: 200px;
$height: 400px;
$thick: 20px;
$opacity: 0.7;
$baseColorR: random(120) + 150;
$baseColorG: random(120) + 150;
$baseColorB: random(120) + 150;

body {
  background: #000;
  height: 100vh;
  overflow: hidden;
  display: flex;
  justify-content: center;
  align-items: center;
  perspective: 800px;
}
div {
  transform-style: preserve-3d;
  backface-visibility: hidden;
  position: absolute;
  &::before {
    position: absolute;
    backface-visibility: hidden;
  }
  &::after {
    position: absolute;
    backface-visibility: hidden;
  }
}
#fridge {
  animation: fridgeRotate 10000ms linear infinite;
  .body {
    animation: bodyRotate 8000ms cubic-bezier(0.545, 0.080, 0.520, 0.975) infinite alternate;
  }
  .outside {
    width: 100%;
    height: 100%;
    background: rgba($baseColorR, $baseColorG, $baseColorB, $opacity);
    &::before {
      content: '';
      width: $thick;
      height: 100%;
      background: rgba($baseColorR - 50, $baseColorG - 50, $baseColorB - 50, $opacity);
      transform-origin: 0 0;
      transform: rotateY(-90deg) translateX(-$thick);
    }
    &::after {
      content: '';
      right: 0;
      width: $thick;
      height: 100%;
      background: rgba($baseColorR - 50, $baseColorG - 50, $baseColorB - 50, $opacity);
      transform-origin: 100% 100%;
      transform: rotateY(90deg) translateX($thick);
    }
  }
  .inside {
    width: 100%;
    height: 100%;
    background: rgba($baseColorR - 100, $baseColorG - 100, $baseColorB - 100, $opacity);
    transform: rotateX(180deg) translateZ($thick);
    &::before {
      content: '';
      width: 100%;
      height: $thick;
      background: rgba($baseColorR - 50, $baseColorG - 50, $baseColorB - 50, $opacity);
      transform-origin: 50% 0;
      transform: rotateX(90deg) translateY(-$thick);
    }
    &::after {
      content: '';
      width: 100%;
      bottom: 0;
      height: $thick;
      background: rgba($baseColorR - 50, $baseColorG - 50, $baseColorB - 50, $opacity);
      transform-origin: 50% 100%;
      transform: rotateX(-90deg) translateY($thick);
    }
  }
  .wall_left {
    width: $width;
    height: $height;
    transform: rotateY(-90deg) translateZ($width / 2 + $thick);
  }
  .wall_right {
    width: $width;
    height: $height;
    transform: rotateY(90deg) translateZ($width / 2 + $thick);
  }
  .wall_top {
    width: $width;
    height: $width;
    transform: rotateX(90deg) translateZ($width / 2);
  }
  .wall_bottom {
    width: $width;
    height: $width;
    transform: rotateX(-90deg) translateZ($height - $width / 2);
  }
  .wall_back {
    width: $width + $thick * 2;
    height: $height;
    transform: rotateY(180deg) translateX($thick) translateZ($width / 2 + $thick);
  }
  .partition {
    width: $width;
    height: $width;
    transform: rotateX(-90deg) translateZ($width / -2 + $width * 1.2 + $thick / 2);
  }
  .door_top {
    transform-origin: $width + $thick 0 $width / 2;
    animation: doorTopOpen 3000ms cubic-bezier(0.545, 0.080, 0.520, 0.975) infinite alternate;
    .front {
      width: $width + $thick * 2;
      height: $width * 1.2;
      transform: translateX(-$thick) translateZ($width / 2 + $thick);
    }
  }
  .door_bottom {
    transform: translateZ(120px);
    animation: doorBottomOpen 2000ms cubic-bezier(0.545, 0.080, 0.520, 0.975) infinite alternate;
    .front {
      width: $width + $thick * 2;
      height: $height - $width * 1.2;
      transform: translateX(-$thick) translateY($width * 1.2) translateZ($width / 2 + $thick);
    }
    .left {
      width: $width;
      height: $height - $width * 1.2 - $thick * 1.5;
      transform: rotateY(-90deg) translateY($width * 1.2 + $thick / 2) translateZ($width / 2);
    }
    .right {
      width: $width;
      height: $height - $width * 1.2 - $thick * 1.5;
      transform: rotateY(90deg) translateY($width * 1.2 + $thick / 2) translateZ($width / 2);
    }
    .back {
      width: $width - $thick * 2;
      height: $height - $width * 1.2 - $thick * 1.5;
      transform: rotateY(180deg) translateX(-$thick) translateY($width * 1.2 + $thick / 2) translateZ($width / 2);
    }
    .bottom {
      width: $width - $thick * 2;
      height: $width - $thick;
      transform: rotateX(-90deg) translateX($thick) translateY(-$thick / 2) translateZ(($width - $thick) / -2 + $thick + $height - $thick * 2);
    }
  }
}

@keyframes fridgeRotate {
  0% {
    transform: rotateY(0deg);
  }
  100% {
    transform: rotateY(360deg);
  }
}

@keyframes doorTopOpen {
  0% {
    transform: rotateY(0deg);
  }
  100% {
    transform: rotateY(130deg);
  }
}
@keyframes doorBottomOpen {
  0% {
    transform: translateZ(0px);
  }
  100% {
    transform: translateZ($width * 1.5);
  }
}
@keyframes bodyRotate {
  0% {
    transform: translate(-$width / 2, -$height / 2) rotateX(20deg);
  }
  100% {
    transform: translate(-$width / 2, -$height / 2) rotateX(-20deg);
  }
}